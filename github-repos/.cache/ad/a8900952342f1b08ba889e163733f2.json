{"id":"../node_modules/@octokit/rest/plugins/normalize-git-reference-responses/index.js","dependencies":[{"name":"/Users/trashpanda/Projects/react-examples/github-repos/package.json","includedInParent":true,"mtime":1563048131818},{"name":"/Users/trashpanda/Projects/react-examples/github-repos/.babelrc","includedInParent":true,"mtime":1562940189648},{"name":"/Users/trashpanda/Projects/react-examples/github-repos/node_modules/@octokit/rest/package.json","includedInParent":true,"mtime":1563030517441},{"name":"@octokit/request-error","loc":{"line":3,"column":33},"parent":"/Users/trashpanda/Projects/react-examples/github-repos/node_modules/@octokit/rest/plugins/normalize-git-reference-responses/index.js","resolved":"/Users/trashpanda/Projects/react-examples/github-repos/node_modules/@octokit/request-error/dist-web/index.js"}],"generated":{"js":"module.exports = octokitRestNormalizeGitReferenceResponses\n\nconst { RequestError } = require('@octokit/request-error')\n\nfunction octokitRestNormalizeGitReferenceResponses (octokit) {\n  octokit.hook.wrap('request', (request, options) => {\n    const isGetOrListRefRequest = /\\/repos\\/:?\\w+\\/:?\\w+\\/git\\/refs\\/:?\\w+/.test(options.url)\n\n    if (!isGetOrListRefRequest) {\n      return request(options)\n    }\n\n    const isGetRefRequest = 'ref' in options\n\n    return request(options)\n      .then(response => {\n        // request single reference\n        if (isGetRefRequest) {\n          if (Array.isArray(response.data)) {\n            throw new RequestError(`More than one reference found for \"${options.ref}\"`, 404, {\n              request: options\n            })\n          }\n\n          // âœ… received single reference\n          return response\n        }\n\n        // request list of references\n        if (!Array.isArray(response.data)) {\n          response.data = [response.data]\n        }\n\n        return response\n      })\n\n      .catch(error => {\n        if (isGetRefRequest) {\n          throw error\n        }\n\n        if (error.status === 404) {\n          return {\n            status: 200,\n            headers: error.headers,\n            data: []\n          }\n        }\n\n        throw error\n      })\n  })\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/@octokit/rest/plugins/normalize-git-reference-responses/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/normalize-git-reference-responses/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/normalize-git-reference-responses/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/normalize-git-reference-responses/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/normalize-git-reference-responses/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/normalize-git-reference-responses/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/normalize-git-reference-responses/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/normalize-git-reference-responses/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/normalize-git-reference-responses/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/normalize-git-reference-responses/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/normalize-git-reference-responses/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/normalize-git-reference-responses/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/normalize-git-reference-responses/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/normalize-git-reference-responses/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/normalize-git-reference-responses/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/normalize-git-reference-responses/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/normalize-git-reference-responses/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/normalize-git-reference-responses/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/normalize-git-reference-responses/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/normalize-git-reference-responses/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/normalize-git-reference-responses/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/normalize-git-reference-responses/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/normalize-git-reference-responses/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/normalize-git-reference-responses/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/normalize-git-reference-responses/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/normalize-git-reference-responses/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/normalize-git-reference-responses/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/normalize-git-reference-responses/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/normalize-git-reference-responses/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/normalize-git-reference-responses/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/normalize-git-reference-responses/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/normalize-git-reference-responses/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/normalize-git-reference-responses/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/normalize-git-reference-responses/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/normalize-git-reference-responses/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/normalize-git-reference-responses/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/normalize-git-reference-responses/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/normalize-git-reference-responses/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/normalize-git-reference-responses/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/normalize-git-reference-responses/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/normalize-git-reference-responses/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/normalize-git-reference-responses/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/normalize-git-reference-responses/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/normalize-git-reference-responses/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/normalize-git-reference-responses/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/normalize-git-reference-responses/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/normalize-git-reference-responses/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/normalize-git-reference-responses/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/normalize-git-reference-responses/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/normalize-git-reference-responses/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/normalize-git-reference-responses/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/normalize-git-reference-responses/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/normalize-git-reference-responses/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/normalize-git-reference-responses/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}}],"sources":{"../node_modules/@octokit/rest/plugins/normalize-git-reference-responses/index.js":"module.exports = octokitRestNormalizeGitReferenceResponses\n\nconst { RequestError } = require('@octokit/request-error')\n\nfunction octokitRestNormalizeGitReferenceResponses (octokit) {\n  octokit.hook.wrap('request', (request, options) => {\n    const isGetOrListRefRequest = /\\/repos\\/:?\\w+\\/:?\\w+\\/git\\/refs\\/:?\\w+/.test(options.url)\n\n    if (!isGetOrListRefRequest) {\n      return request(options)\n    }\n\n    const isGetRefRequest = 'ref' in options\n\n    return request(options)\n      .then(response => {\n        // request single reference\n        if (isGetRefRequest) {\n          if (Array.isArray(response.data)) {\n            throw new RequestError(`More than one reference found for \"${options.ref}\"`, 404, {\n              request: options\n            })\n          }\n\n          // âœ… received single reference\n          return response\n        }\n\n        // request list of references\n        if (!Array.isArray(response.data)) {\n          response.data = [response.data]\n        }\n\n        return response\n      })\n\n      .catch(error => {\n        if (isGetRefRequest) {\n          throw error\n        }\n\n        if (error.status === 404) {\n          return {\n            status: 200,\n            headers: error.headers,\n            data: []\n          }\n        }\n\n        throw error\n      })\n  })\n}\n"},"lineCount":54}},"error":null,"hash":"4250b8751c3a7529f88a5adea9fe1eef","cacheData":{"env":{}}}