{"id":"../node_modules/@octokit/rest/plugins/validate/validate.js","dependencies":[{"name":"/Users/trashpanda/Projects/react-examples/github-repos/package.json","includedInParent":true,"mtime":1563048131818},{"name":"/Users/trashpanda/Projects/react-examples/github-repos/.babelrc","includedInParent":true,"mtime":1562940189648},{"name":"/Users/trashpanda/Projects/react-examples/github-repos/node_modules/@octokit/rest/package.json","includedInParent":true,"mtime":1563030517441},{"name":"@octokit/request-error","loc":{"line":5,"column":33},"parent":"/Users/trashpanda/Projects/react-examples/github-repos/node_modules/@octokit/rest/plugins/validate/validate.js","resolved":"/Users/trashpanda/Projects/react-examples/github-repos/node_modules/@octokit/request-error/dist-web/index.js"},{"name":"lodash.get","loc":{"line":6,"column":20},"parent":"/Users/trashpanda/Projects/react-examples/github-repos/node_modules/@octokit/rest/plugins/validate/validate.js","resolved":"/Users/trashpanda/Projects/react-examples/github-repos/node_modules/lodash.get/index.js"},{"name":"lodash.set","loc":{"line":7,"column":20},"parent":"/Users/trashpanda/Projects/react-examples/github-repos/node_modules/@octokit/rest/plugins/validate/validate.js","resolved":"/Users/trashpanda/Projects/react-examples/github-repos/node_modules/lodash.set/index.js"}],"generated":{"js":"'use strict'\n\nmodule.exports = validate\n\nconst { RequestError } = require('@octokit/request-error')\nconst get = require('lodash.get')\nconst set = require('lodash.set')\n\nfunction validate (octokit, options) {\n  if (!options.request.validate) {\n    return\n  }\n  const { validate: params } = options.request\n\n  Object.keys(params).forEach(parameterName => {\n    let parameter = get(params, parameterName)\n\n    const expectedType = parameter.type\n    let parentParameterName\n    let parentValue\n    let parentParamIsPresent = true\n    let parentParameterIsArray = false\n\n    if (/\\./.test(parameterName)) {\n      parentParameterName = parameterName.replace(/\\.[^.]+$/, '')\n      parentParameterIsArray = parentParameterName.slice(-2) === '[]'\n      if (parentParameterIsArray) {\n        parentParameterName = parentParameterName.slice(0, -2)\n      }\n      parentValue = get(options, parentParameterName)\n      parentParamIsPresent = parentParameterName === 'headers' || (typeof parentValue === 'object' && parentValue !== null)\n    }\n\n    let values = parentParameterIsArray\n      ? (get(options, parentParameterName) || []).map(value => value[parameterName.split(/\\./).pop()])\n      : [get(options, parameterName)]\n\n    values.forEach((value, i) => {\n      const valueIsPresent = typeof value !== 'undefined'\n      const valueIsNull = value === null\n      const currentParameterName = parentParameterIsArray\n        ? parameterName.replace(/\\[\\]/, `[${i}]`)\n        : parameterName\n\n      if (!parameter.required && !valueIsPresent) {\n        return\n      }\n\n      // if the parent parameter is of type object but allows null\n      // then the child parameters can be ignored\n      if (!parentParamIsPresent) {\n        return\n      }\n\n      if (parameter.allowNull && valueIsNull) {\n        return\n      }\n\n      if (!parameter.allowNull && valueIsNull) {\n        throw new RequestError(`'${currentParameterName}' cannot be null`, 400, {\n          request: options\n        })\n      }\n\n      if (parameter.required && !valueIsPresent) {\n        throw new RequestError(`Empty value for parameter '${currentParameterName}': ${JSON.stringify(value)}`, 400, {\n          request: options\n        })\n      }\n\n      // parse to integer before checking for enum\n      // so that string \"1\" will match enum with number 1\n      if (expectedType === 'integer') {\n        const unparsedValue = value\n        value = parseInt(value, 10)\n        if (isNaN(value)) {\n          throw new RequestError(`Invalid value for parameter '${currentParameterName}': ${JSON.stringify(unparsedValue)} is NaN`, 400, {\n            request: options\n          })\n        }\n      }\n\n      if (parameter.enum && parameter.enum.indexOf(value) === -1) {\n        throw new RequestError(`Invalid value for parameter '${currentParameterName}': ${JSON.stringify(value)}`, 400, {\n          request: options\n        })\n      }\n\n      if (parameter.validation) {\n        const regex = new RegExp(parameter.validation)\n        if (!regex.test(value)) {\n          throw new RequestError(`Invalid value for parameter '${currentParameterName}': ${JSON.stringify(value)}`, 400, {\n            request: options\n          })\n        }\n      }\n\n      if (expectedType === 'object' && typeof value === 'string') {\n        try {\n          value = JSON.parse(value)\n        } catch (exception) {\n          throw new RequestError(`JSON parse error of value for parameter '${currentParameterName}': ${JSON.stringify(value)}`, 400, {\n            request: options\n          })\n        }\n      }\n\n      set(options, parameter.mapTo || currentParameterName, value)\n    })\n  })\n\n  return options\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/@octokit/rest/plugins/validate/validate.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}}],"sources":{"../node_modules/@octokit/rest/plugins/validate/validate.js":"'use strict'\n\nmodule.exports = validate\n\nconst { RequestError } = require('@octokit/request-error')\nconst get = require('lodash.get')\nconst set = require('lodash.set')\n\nfunction validate (octokit, options) {\n  if (!options.request.validate) {\n    return\n  }\n  const { validate: params } = options.request\n\n  Object.keys(params).forEach(parameterName => {\n    let parameter = get(params, parameterName)\n\n    const expectedType = parameter.type\n    let parentParameterName\n    let parentValue\n    let parentParamIsPresent = true\n    let parentParameterIsArray = false\n\n    if (/\\./.test(parameterName)) {\n      parentParameterName = parameterName.replace(/\\.[^.]+$/, '')\n      parentParameterIsArray = parentParameterName.slice(-2) === '[]'\n      if (parentParameterIsArray) {\n        parentParameterName = parentParameterName.slice(0, -2)\n      }\n      parentValue = get(options, parentParameterName)\n      parentParamIsPresent = parentParameterName === 'headers' || (typeof parentValue === 'object' && parentValue !== null)\n    }\n\n    let values = parentParameterIsArray\n      ? (get(options, parentParameterName) || []).map(value => value[parameterName.split(/\\./).pop()])\n      : [get(options, parameterName)]\n\n    values.forEach((value, i) => {\n      const valueIsPresent = typeof value !== 'undefined'\n      const valueIsNull = value === null\n      const currentParameterName = parentParameterIsArray\n        ? parameterName.replace(/\\[\\]/, `[${i}]`)\n        : parameterName\n\n      if (!parameter.required && !valueIsPresent) {\n        return\n      }\n\n      // if the parent parameter is of type object but allows null\n      // then the child parameters can be ignored\n      if (!parentParamIsPresent) {\n        return\n      }\n\n      if (parameter.allowNull && valueIsNull) {\n        return\n      }\n\n      if (!parameter.allowNull && valueIsNull) {\n        throw new RequestError(`'${currentParameterName}' cannot be null`, 400, {\n          request: options\n        })\n      }\n\n      if (parameter.required && !valueIsPresent) {\n        throw new RequestError(`Empty value for parameter '${currentParameterName}': ${JSON.stringify(value)}`, 400, {\n          request: options\n        })\n      }\n\n      // parse to integer before checking for enum\n      // so that string \"1\" will match enum with number 1\n      if (expectedType === 'integer') {\n        const unparsedValue = value\n        value = parseInt(value, 10)\n        if (isNaN(value)) {\n          throw new RequestError(`Invalid value for parameter '${currentParameterName}': ${JSON.stringify(unparsedValue)} is NaN`, 400, {\n            request: options\n          })\n        }\n      }\n\n      if (parameter.enum && parameter.enum.indexOf(value) === -1) {\n        throw new RequestError(`Invalid value for parameter '${currentParameterName}': ${JSON.stringify(value)}`, 400, {\n          request: options\n        })\n      }\n\n      if (parameter.validation) {\n        const regex = new RegExp(parameter.validation)\n        if (!regex.test(value)) {\n          throw new RequestError(`Invalid value for parameter '${currentParameterName}': ${JSON.stringify(value)}`, 400, {\n            request: options\n          })\n        }\n      }\n\n      if (expectedType === 'object' && typeof value === 'string') {\n        try {\n          value = JSON.parse(value)\n        } catch (exception) {\n          throw new RequestError(`JSON parse error of value for parameter '${currentParameterName}': ${JSON.stringify(value)}`, 400, {\n            request: options\n          })\n        }\n      }\n\n      set(options, parameter.mapTo || currentParameterName, value)\n    })\n  })\n\n  return options\n}\n"},"lineCount":114}},"error":null,"hash":"6ddf58ec9d0a6f9b224ee0a1c03c33b8","cacheData":{"env":{}}}